CREATE TABLE REPORT_DATASOURCE(DATASOURCE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,NAME VARCHAR(255) NOT NULL,DRIVER VARCHAR(255),URL VARCHAR(255) NOT NULL,USERNAME VARCHAR(255),PASSWORD VARCHAR(255),MAX_IDLE INTEGER,MAX_ACTIVE INTEGER,MAX_WAIT BIGINT,VALIDATION_QUERY VARCHAR(255),JNDI BOOLEAN,CONSTRAINT SYS_CT_20 UNIQUE(NAME))
CREATE TABLE REPORT_PARAMETER(PARAMETER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,NAME VARCHAR(255) NOT NULL,TYPE VARCHAR(255) NOT NULL,CLASSNAME VARCHAR(255) NOT NULL,DATA LONGVARCHAR,DATASOURCE_ID INTEGER,DESCRIPTION VARCHAR(255),REQUIRED BOOLEAN,MULTI_SELECT BOOLEAN,DEFAULT_VALUE VARCHAR(255),CONSTRAINT SYS_CT_23 UNIQUE(NAME),CONSTRAINT FKBC64163E7175EF55 FOREIGN KEY(DATASOURCE_ID) REFERENCES REPORT_DATASOURCE(DATASOURCE_ID),CONSTRAINT FKBC64163E4330D5A7 FOREIGN KEY(DATASOURCE_ID) REFERENCES REPORT_DATASOURCE(DATASOURCE_ID))
CREATE TABLE REPORT_LOG(LOG_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,START_TIME TIMESTAMP,END_TIME TIMESTAMP,STATUS VARCHAR(255),MESSAGE VARCHAR(255),REPORT_ID INTEGER,USER_ID INTEGER,ALERT_ID INTEGER,EXPORT_TYPE INTEGER,REQUEST_ID VARCHAR(255))
CREATE TABLE REPORT(REPORT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,NAME VARCHAR(255) NOT NULL,DESCRIPTION VARCHAR(255) NOT NULL,REPORT_FILE VARCHAR(255) NOT NULL,PDF_EXPORT BOOLEAN,CSV_EXPORT BOOLEAN,XLS_EXPORT BOOLEAN,HTML_EXPORT BOOLEAN,CHART_ID INTEGER,REPORT_QUERY LONGVARCHAR,DATASOURCE_ID INTEGER,FILL_VIRTUAL BOOLEAN,EXCEL_EXPORT BOOLEAN,TEXT_EXPORT BOOLEAN,RTF_EXPORT BOOLEAN,EXPORT_OPTION_ID INTEGER,HIDDEN_REPORT BOOLEAN,IMAGE_EXPORT BOOLEAN,CONSTRAINT SYS_CT_25 UNIQUE(NAME),CONSTRAINT FK8FDF49347175EF55 FOREIGN KEY(DATASOURCE_ID) REFERENCES REPORT_DATASOURCE(DATASOURCE_ID),CONSTRAINT FK8FDF49344330D5A7 FOREIGN KEY(DATASOURCE_ID) REFERENCES REPORT_DATASOURCE(DATASOURCE_ID))
CREATE TABLE USER_GROUP_MAP(USER_ID INTEGER NOT NULL,GROUP_ID INTEGER NOT NULL,MAP_ID INTEGER NOT NULL,CONSTRAINT SYS_PK_USER_GROUP_MAP PRIMARY KEY(USER_ID,MAP_ID))
CREATE TABLE REPORT_GROUP(GROUP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,NAME VARCHAR(255) NOT NULL,DESCRIPTION VARCHAR(255) NOT NULL,CONSTRAINT SYS_CT_27 UNIQUE(NAME))
CREATE TABLE REPORT_PARAMETER_MAP(REPORT_ID INTEGER NOT NULL,PARAMETER_ID INTEGER NOT NULL,REQUIRED BOOLEAN,SORT_ORDER INTEGER,STEP INTEGER,MAP_ID INTEGER NOT NULL,CONSTRAINT SYS_PK_REPORT_PARAMETER_MAP PRIMARY KEY(REPORT_ID,MAP_ID),CONSTRAINT FK23FF1FBB2E8E1191 FOREIGN KEY(PARAMETER_ID) REFERENCES REPORT_PARAMETER(PARAMETER_ID),CONSTRAINT FK23FF1FBB91092806 FOREIGN KEY(REPORT_ID) REFERENCES REPORT(REPORT_ID),CONSTRAINT FK23FF1FBB1AFAD98D FOREIGN KEY(PARAMETER_ID) REFERENCES REPORT_PARAMETER(PARAMETER_ID),CONSTRAINT FK23FF1FBBAAEF4A13 FOREIGN KEY(REPORT_ID) REFERENCES REPORT(REPORT_ID))
CREATE TABLE REPORT_GROUP_MAP(GROUP_ID INTEGER NOT NULL,REPORT_ID INTEGER NOT NULL,MAP_ID INTEGER NOT NULL,CONSTRAINT SYS_PK_REPORT_GROUP_MAP PRIMARY KEY(GROUP_ID,MAP_ID),CONSTRAINT FKEF94621191092806 FOREIGN KEY(REPORT_ID) REFERENCES REPORT(REPORT_ID),CONSTRAINT FKEF9462114CD4DEFB FOREIGN KEY(GROUP_ID) REFERENCES REPORT_GROUP(GROUP_ID),CONSTRAINT FKEF946211AAEF4A13 FOREIGN KEY(REPORT_ID) REFERENCES REPORT(REPORT_ID),CONSTRAINT FKEF946211DF17134D FOREIGN KEY(GROUP_ID) REFERENCES REPORT_GROUP(GROUP_ID))
CREATE TABLE REPORT_CHART(CHART_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,NAME VARCHAR(255) NOT NULL,DESCRIPTION VARCHAR(255) NOT NULL,CHART_QUERY LONGVARCHAR NOT NULL,CHART_TYPE INTEGER NOT NULL,WIDTH INTEGER NOT NULL,HEIGHT INTEGER NOT NULL,X_AXIS_LABEL VARCHAR(255),Y_AXIS_LABEL VARCHAR(255),DATASOURCE_ID INTEGER,SHOW_LEGEND BOOLEAN,SHOW_TITLE BOOLEAN,PLOT_ORIENTATION INTEGER,REPORT_ID INTEGER,SHOW_VALUES BOOLEAN,OVERLAY_CHART_ID INTEGER,CONSTRAINT SYS_CT_18 UNIQUE(NAME),CONSTRAINT FKF836D4F37175EF55 FOREIGN KEY(DATASOURCE_ID) REFERENCES REPORT_DATASOURCE(DATASOURCE_ID),CONSTRAINT FKF836D4F3AAEF4A13 FOREIGN KEY(REPORT_ID) REFERENCES REPORT(REPORT_ID),CONSTRAINT FKF836D4F34330D5A7 FOREIGN KEY(DATASOURCE_ID) REFERENCES REPORT_DATASOURCE(DATASOURCE_ID),CONSTRAINT FKF836D4F3C83B69FC FOREIGN KEY(OVERLAY_CHART_ID) REFERENCES REPORT_CHART(CHART_ID))
CREATE TABLE REPORT_USER(REPORTUSER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,NAME VARCHAR(255) NOT NULL,PASSWORD VARCHAR(255) NOT NULL,EXTERNAL_ID VARCHAR(255),EMAIL_ADDRESS VARCHAR(255),PDF_EXPORT_TYPE INTEGER NOT NULL,DEFAULT_REPORT_ID INTEGER,CONSTRAINT SYS_CT_9 UNIQUE(NAME),CONSTRAINT FK7364F3F6EE01FD95 FOREIGN KEY(DEFAULT_REPORT_ID) REFERENCES REPORT(REPORT_ID))
CREATE TABLE OR_PROPERTIES(PROPERTY_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,PROPERTY_KEY VARCHAR(255) NOT NULL,PROPERTY_VALUE VARCHAR(255),CONSTRAINT SYS_CT_65 UNIQUE(PROPERTY_KEY))
CREATE TABLE REPORT_ALERT(ALERT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,NAME VARCHAR(255) NOT NULL,DESCRIPTION VARCHAR(255) NOT NULL,ALERT_QUERY LONGVARCHAR NOT NULL,DATASOURCE_ID INTEGER,CONSTRAINT SYS_CT_67 UNIQUE(NAME),CONSTRAINT FKF81C86714330D5A7 FOREIGN KEY(DATASOURCE_ID) REFERENCES REPORT_DATASOURCE(DATASOURCE_ID))
CREATE TABLE USER_ALERT_MAP(USER_ID INTEGER NOT NULL,ALERT_ID INTEGER,ALERT_LIMIT INTEGER,ALERT_OPERATOR VARCHAR(255),MAP_ID INTEGER NOT NULL,REPORT_ID INTEGER,CONSTRAINT SYS_PK_USER_ALERT_MAP PRIMARY KEY(USER_ID,MAP_ID),CONSTRAINT FKD83C845AAEF4A13 FOREIGN KEY(REPORT_ID) REFERENCES REPORT(REPORT_ID),CONSTRAINT FKD83C84520DA4A2D FOREIGN KEY(ALERT_ID) REFERENCES REPORT_ALERT(ALERT_ID),CONSTRAINT FKD83C845E4B42987 FOREIGN KEY(USER_ID) REFERENCES REPORT_USER(REPORTUSER_ID))
CREATE TABLE REPORT_EXPORT_OPTIONS(EXPORT_OPTION_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,XLS_REMOVE_EMPTY_SPACE BOOLEAN NOT NULL,XLS_ONE_PAGE_PER_SHEET BOOLEAN NOT NULL,XLS_AUTO_DETECT_CELL BOOLEAN NOT NULL,XLS_WHITE_BACKGROUND BOOLEAN NOT NULL,HTML_REMOVE_EMPTY_SPACE BOOLEAN NOT NULL,HTML_WHITE_BACKGROUND BOOLEAN NOT NULL,HTML_USE_IMAGES BOOLEAN NOT NULL,HTML_WRAP_BREAK BOOLEAN NOT NULL)
CREATE TABLE QRTZ_JOB_DETAILS(JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,DESCRIPTION VARCHAR(120),JOB_CLASS_NAME VARCHAR(128) NOT NULL,IS_DURABLE VARCHAR(1) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,IS_STATEFUL VARCHAR(1) NOT NULL,REQUESTS_RECOVERY VARCHAR(1) NOT NULL,JOB_DATA BINARY,CONSTRAINT SYS_PK_QRTZ_JOB_DETAILS PRIMARY KEY(JOB_NAME,JOB_GROUP))
CREATE TABLE QRTZ_JOB_LISTENERS(JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,JOB_LISTENER VARCHAR(80) NOT NULL,CONSTRAINT SYS_PK_QRTZ_JOB_LISTENERS PRIMARY KEY(JOB_NAME,JOB_GROUP,JOB_LISTENER),CONSTRAINT SYS_FK_26 FOREIGN KEY(JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP))
CREATE TABLE QRTZ_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,DESCRIPTION VARCHAR(120),NEXT_FIRE_TIME NUMERIC(13),PREV_FIRE_TIME NUMERIC(13),TRIGGER_STATE VARCHAR(16) NOT NULL,TRIGGER_TYPE VARCHAR(8) NOT NULL,START_TIME NUMERIC(13) NOT NULL,END_TIME NUMERIC(13),CALENDAR_NAME VARCHAR(80),MISFIRE_INSTR NUMERIC(2),JOB_DATA BINARY,PRIORITY NUMERIC(13),CONSTRAINT SYS_PK_QRTZ_TRIGGERS PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_29 FOREIGN KEY(JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP))
CREATE TABLE QRTZ_SIMPLE_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,REPEAT_COUNT NUMERIC(7) NOT NULL,REPEAT_INTERVAL NUMERIC(12) NOT NULL,TIMES_TRIGGERED NUMERIC(7) NOT NULL,CONSTRAINT SYS_PK_QRTZ_SIMPLE_TRIGGERS PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_32 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE TABLE QRTZ_CRON_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,CRON_EXPRESSION VARCHAR(80) NOT NULL,TIME_ZONE_ID VARCHAR(80),CONSTRAINT SYS_PK_QRTZ_CRON_TRIGGERS PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_35 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE TABLE QRTZ_BLOB_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,BLOB_DATA BINARY,CONSTRAINT SYS_PK_QRTZ_BLOB_TRIGGERS PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_38 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE TABLE QRTZ_TRIGGER_LISTENERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,TRIGGER_LISTENER VARCHAR(80) NOT NULL,CONSTRAINT SYS_PK_QRTZ_TRIGGER_LISTENERS PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),CONSTRAINT SYS_FK_41 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE TABLE QRTZ_CALENDARS(CALENDAR_NAME VARCHAR(80) NOT NULL PRIMARY KEY,CALENDAR BINARY NOT NULL)
CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS(TRIGGER_GROUP VARCHAR(80) NOT NULL PRIMARY KEY)
CREATE TABLE QRTZ_FIRED_TRIGGERS(ENTRY_ID VARCHAR(95) NOT NULL PRIMARY KEY,TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,INSTANCE_NAME VARCHAR(80) NOT NULL,FIRED_TIME NUMERIC(13) NOT NULL,STATE VARCHAR(16) NOT NULL,JOB_NAME VARCHAR(80),JOB_GROUP VARCHAR(80),IS_STATEFUL VARCHAR(1),REQUESTS_RECOVERY VARCHAR(1),PRIORITY NUMERIC(13))
CREATE TABLE QRTZ_SCHEDULER_STATE(INSTANCE_NAME VARCHAR(80) NOT NULL PRIMARY KEY,LAST_CHECKIN_TIME NUMERIC(13) NOT NULL,CHECKIN_INTERVAL NUMERIC(13) NOT NULL,RECOVERER VARCHAR(80))
CREATE TABLE QRTZ_LOCKS(LOCK_NAME VARCHAR(40) NOT NULL PRIMARY KEY)
CREATE TABLE USER_SECURITY(USER_ID INTEGER NOT NULL,ROLE_NAME VARCHAR(255),CONSTRAINT FK7DE1C934E4B42987 FOREIGN KEY(USER_ID) REFERENCES REPORT_USER(REPORTUSER_ID))
CREATE TABLE REPORT_DELIVERY_LOG(DELIVERY_LOG_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1)  NOT NULL PRIMARY KEY,START_TIME TIMESTAMP,END_TIME TIMESTAMP,STATUS VARCHAR(255),MESSAGE LONGVARCHAR,DELIVERY_METHOD VARCHAR(255),LOG_ID INTEGER,DELIVERY_INDEX INTEGER,CONSTRAINT FKC783FD84632801ED FOREIGN KEY(LOG_ID) REFERENCES REPORT_LOG(LOG_ID))
CREATE TABLE OR_TAGS(TAG_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1)  NOT NULL PRIMARY KEY,TAGGED_OBJECT_ID INTEGER NOT NULL,TAGGED_OBJECT_CLASS VARCHAR(255) NOT NULL,TAG_VALUE VARCHAR(255) NOT NULL,TAG_TYPE VARCHAR(255))
ALTER TABLE REPORT_LOG ADD CONSTRAINT FK901BE59991092806 FOREIGN KEY(REPORT_ID) REFERENCES REPORT(REPORT_ID)
ALTER TABLE REPORT_LOG ADD CONSTRAINT FK901BE599E4B42987 FOREIGN KEY(USER_ID) REFERENCES REPORT_USER(REPORTUSER_ID)
ALTER TABLE REPORT_LOG ADD CONSTRAINT FK901BE599AAEF4A13 FOREIGN KEY(REPORT_ID) REFERENCES REPORT(REPORT_ID)
ALTER TABLE REPORT ADD CONSTRAINT FK8FDF4934F4DD5A50 FOREIGN KEY(EXPORT_OPTION_ID) REFERENCES REPORT_EXPORT_OPTIONS(EXPORT_OPTION_ID)
ALTER TABLE REPORT ADD CONSTRAINT FK8FDF4934164AA2ED FOREIGN KEY(CHART_ID) REFERENCES REPORT_CHART(CHART_ID)
ALTER TABLE USER_GROUP_MAP ADD CONSTRAINT FKC49EBE8DF17134D FOREIGN KEY(GROUP_ID) REFERENCES REPORT_GROUP(GROUP_ID)
ALTER TABLE USER_GROUP_MAP ADD CONSTRAINT FKC49EBE8E4B42987 FOREIGN KEY(USER_ID) REFERENCES REPORT_USER(REPORTUSER_ID)
GRANT ALL ON CLASS "org.hsql.Library" TO PUBLIC
CREATE USER SA PASSWORD "" ADMIN
SET WRITE_DELAY 60
INSERT INTO REPORT_DATASOURCE VALUES(2,'OpenReports Sample Data','org.hsqldb.jdbcDriver','jdbc:hsqldb:hsql://127.0.0.1:9001/sample','sa','',2,20,1800,NULL,FALSE)
INSERT INTO REPORT_DATASOURCE VALUES(3,'OpenReports','org.hsqldb.jdbcDriver','jdbc:hsqldb:hsql://127.0.0.1:9001/openreports','sa','',2,20,1800,NULL,FALSE)
INSERT INTO REPORT_PARAMETER VALUES(9,'MaxOrderDate','Date','java.util.Date','',NULL,'Max Order Date ',TRUE,FALSE,NULL)
INSERT INTO REPORT_PARAMETER VALUES(11,'Footer','Text','java.lang.String','',NULL,'Footer Text ',FALSE,FALSE,NULL)
INSERT INTO REPORT_PARAMETER VALUES(19,'YesNo','Boolean','java.lang.Boolean','',NULL,'Show Footer',FALSE,FALSE,NULL)
INSERT INTO REPORT_PARAMETER VALUES(20,'ProductCode','Query','java.lang.String','select productcode, productname from products order by productname',2,'Product Code ',TRUE,TRUE,NULL)
INSERT INTO REPORT_PARAMETER VALUES(21,'CustomerNumber','Query','java.lang.String','select customernumber, customername from customers order by customername',2,'Customer Number ',TRUE,FALSE,NULL)
INSERT INTO REPORT_PARAMETER VALUES(22,'ProductLine','Query','java.lang.String','select distinct productline from products order by productline',2,'Product Line',TRUE,FALSE,NULL)
INSERT INTO REPORT_PARAMETER VALUES(23,'ProductCodes','Query','java.lang.String','select distinct productcode, productname from products \u000d\u000awhere productline = $P{ProductLine}\u000d\u000aorder by productname',2,'Product Codes ',FALSE,TRUE,NULL)
INSERT INTO REPORT_PARAMETER VALUES(24,'Country','Query','java.lang.String','select distinct country from customers \u000d\u000aorder by country',2,'Country',TRUE,FALSE,NULL)
INSERT INTO REPORT_PARAMETER VALUES(25,'City','Text','java.lang.String','',NULL,'City',FALSE,FALSE,NULL)
INSERT INTO REPORT_PARAMETER VALUES(26,'MinCreditLimit','List','java.lang.Integer','50000|100000|125000|150000',NULL,'Minimum Credt Limit',TRUE,FALSE,NULL)
INSERT INTO REPORT_PARAMETER VALUES(27,'Department','Query','java.lang.String','select distinct department from quadrant_actuals \u000d\u000aorder by department',2,'Department',TRUE,FALSE,'')
INSERT INTO REPORT_LOG VALUES(4060,'2014-07-25 11:12:28.664',NULL,NULL,NULL,63,0,NULL,NULL,NULL)
INSERT INTO REPORT_LOG VALUES(4061,'2014-07-25 12:08:48.905',NULL,NULL,NULL,63,0,NULL,NULL,NULL)
INSERT INTO REPORT_LOG VALUES(4062,'2014-07-25 12:09:04.521',NULL,NULL,NULL,64,0,NULL,NULL,NULL)
INSERT INTO REPORT_LOG VALUES(4063,'2014-07-25 12:16:39.097',NULL,NULL,NULL,63,0,NULL,NULL,NULL)
INSERT INTO REPORT_LOG VALUES(4064,'2014-07-25 12:21:55.685',NULL,NULL,NULL,63,0,NULL,NULL,NULL)
INSERT INTO REPORT_LOG VALUES(4065,'2014-07-25 12:30:01.164',NULL,NULL,NULL,63,0,NULL,NULL,NULL)
INSERT INTO REPORT VALUES(13,'Orders By Year and Month','ChartReport - XY chart','-1',TRUE,FALSE,FALSE,TRUE,4,'',NULL,FALSE,FALSE,FALSE,FALSE,17,FALSE,FALSE)
INSERT INTO REPORT VALUES(14,'Orders By Date','ChartReport - Time Chart','-1',TRUE,FALSE,FALSE,TRUE,5,'',NULL,FALSE,FALSE,FALSE,FALSE,16,FALSE,FALSE)
INSERT INTO REPORT VALUES(33,'Regional Budget Variances','PentahoReport template example','PentahoBlank.prpt',TRUE,TRUE,TRUE,TRUE,NULL,'select region, department, positiontitle, actual, budget, variance\u000d\u000afrom quadrant_actuals\u000d\u000aorder by region, department, positiontitle',2,FALSE,TRUE,TRUE,TRUE,19,FALSE,TRUE)
INSERT INTO REPORT VALUES(37,'Employee List By Job Title','QueryReport - Basic Example ','-1',FALSE,FALSE,FALSE,FALSE,NULL,'select jobtitle as "Job Title", lastname as "Last Name", firstname as "First Name", extension,email  from employees\u000d\u000aorder by jobtitle, lastname',2,FALSE,FALSE,FALSE,FALSE,23,FALSE,FALSE)
INSERT INTO REPORT VALUES(38,'Orders List By Product and Date','QueryReport - Parameter Example','-1',FALSE,FALSE,FALSE,FALSE,NULL,'select orderdate as "Order Date", productname as "Product", quantityordered as "Quantity", priceeach as "Price", quantityordered * priceeach as "Total", status, comments\u000d\u000a from orders, orderdetails, products where orders.ordernumber = orderdetails.ordernumber\u000d\u000aand orderdetails.productcode = products.productcode and orderdate <= $P{MaxOrderDate}\u000d\u000aand productcode in ($P!{ProductCode})',2,FALSE,FALSE,FALSE,FALSE,24,FALSE,FALSE)
INSERT INTO REPORT VALUES(39,'Customer List','QueryReport - Template with multiple DrillDown reports','CustomerListWithTemplate.ftl',FALSE,FALSE,FALSE,FALSE,NULL,'select customernumber, customername as "Name", addressline1 as "Address", city, state, postalcode, country from customers\u000d\u000aorder by customername',2,FALSE,FALSE,FALSE,FALSE,25,FALSE,FALSE)
INSERT INTO REPORT VALUES(40,'Orders By Customer','QueryReport - DrillDown - Hidden','-1',FALSE,FALSE,FALSE,FALSE,NULL,'select orderdate as "Order Date", productname as "Product", quantityordered as "Quantity", priceeach as "Price", quantityordered * priceeach as "Total", status, comments\u000d\u000a from orders, orderdetails, products where orders.ordernumber = orderdetails.ordernumber\u000d\u000aand orderdetails.productcode = products.productcode and customernumber = $P{CustomerNumber}\u000d\u000a',2,FALSE,FALSE,FALSE,FALSE,26,TRUE,FALSE)
INSERT INTO REPORT VALUES(41,'Orders By Product Line','ChartReport - Pie Chart Example with Parameter','-1',TRUE,FALSE,FALSE,FALSE,9,'',NULL,FALSE,FALSE,FALSE,FALSE,27,FALSE,FALSE)
INSERT INTO REPORT VALUES(42,'Products By Line','ChartReport - Bar Chart with DrillDown (Pro only) and Show Values turned on','-1',TRUE,FALSE,FALSE,FALSE,10,'',NULL,FALSE,FALSE,FALSE,FALSE,28,FALSE,FALSE)
INSERT INTO REPORT VALUES(46,'Product Line','QueryReport -- DrillDown - Hidden','-1',FALSE,FALSE,FALSE,FALSE,NULL,'select productline as "Line", productname as "Name", productvendor as "Vendor", productdescription as "Description", quantityinstock as "Quantity", buyprice as "Price", msrp as "MSRP" from products where productline = $P{DrillDown}',2,FALSE,FALSE,FALSE,FALSE,32,TRUE,FALSE)
INSERT INTO REPORT VALUES(47,'Product Line Inventory','ChartReport - Ring Chart','-1',TRUE,FALSE,FALSE,FALSE,11,'',NULL,FALSE,FALSE,FALSE,FALSE,33,FALSE,FALSE)
INSERT INTO REPORT VALUES(48,'Customer List with Credit Limit','JasperReport - Basic Example','CustomerList.jasper',TRUE,FALSE,TRUE,TRUE,NULL,'',2,FALSE,TRUE,FALSE,TRUE,34,FALSE,FALSE)
INSERT INTO REPORT VALUES(49,'Product Orders','JasperReport - Advanced Parameter Example','ProductOrders.jasper',TRUE,FALSE,FALSE,TRUE,NULL,'',2,FALSE,TRUE,FALSE,TRUE,35,FALSE,FALSE)
INSERT INTO REPORT VALUES(50,'Customer Credit Limits By Country','JasperReport - SubReport Example With Images','AddressMasterReport.jasper',TRUE,FALSE,FALSE,TRUE,NULL,'',2,FALSE,FALSE,FALSE,TRUE,36,FALSE,FALSE)
INSERT INTO REPORT VALUES(53,'Customer Spreadsheet','SpreadsheetReport - Basic Example','Customers.xls',FALSE,FALSE,TRUE,FALSE,NULL,'select * from customers order by customername',2,FALSE,FALSE,FALSE,FALSE,39,FALSE,FALSE)
INSERT INTO REPORT VALUES(54,'Product Line Summary','SpreadsheetReport - Advanced Example with Charts','ProductLines.xls',FALSE,FALSE,FALSE,FALSE,NULL,'select productline, sum(quantityinstock)\u000d\u000afrom products\u000d\u000agroup by productline\u000d\u000aorder by productline',2,FALSE,FALSE,FALSE,FALSE,40,FALSE,FALSE)
INSERT INTO REPORT VALUES(55,'OpenReports Activity','SpreadsheetReport - Embedded SQL example','OpenReportsActivity.xls',TRUE,FALSE,FALSE,FALSE,NULL,'',3,FALSE,FALSE,FALSE,FALSE,41,FALSE,FALSE)
INSERT INTO REPORT VALUES(56,'Brochure','JasperReport - Basic Image example','BrochureReport.jasper',TRUE,FALSE,FALSE,TRUE,NULL,'',NULL,FALSE,FALSE,FALSE,TRUE,42,FALSE,FALSE)
INSERT INTO REPORT VALUES(57,'Customer List  with Drill Down','JasperReport - Drill Down example','CustomerListWithDrillDown.jasper',TRUE,FALSE,FALSE,TRUE,NULL,'',2,FALSE,FALSE,FALSE,FALSE,43,FALSE,FALSE)
INSERT INTO REPORT VALUES(58,'Multiple DataSource Report','BIRT Report - Multiple DataSources Example','MultipleDataSourcesReport.rptdesign',TRUE,FALSE,FALSE,TRUE,NULL,'',NULL,FALSE,FALSE,FALSE,FALSE,44,FALSE,FALSE)
INSERT INTO REPORT VALUES(59,'Customer List (BIRT)','BIRT Report - Basic Example','CustomerList.rptdesign',TRUE,FALSE,FALSE,TRUE,NULL,'',NULL,FALSE,FALSE,FALSE,FALSE,45,FALSE,FALSE)
INSERT INTO REPORT VALUES(60,'Customer List with Min Credit Limit','BIRT Report - Parameter Example','CustomerListWithMinCreditLimit.rptdesign',TRUE,FALSE,TRUE,TRUE,NULL,'',NULL,FALSE,FALSE,FALSE,FALSE,46,FALSE,FALSE)
INSERT INTO REPORT VALUES(61,'Product Line Summary (BIRT)','BIRT Report - Chart Example','ProductInventorySummary.rptdesign',TRUE,FALSE,FALSE,TRUE,NULL,'',NULL,FALSE,FALSE,FALSE,FALSE,47,FALSE,FALSE)
INSERT INTO REPORT VALUES(63,'Quadrant Analysis','Basic OLAP Example','datasources.xml',FALSE,FALSE,FALSE,FALSE,NULL,'SELECT NON EMPTY {[Measures].[Actual], [Measures].[Budget], [Measures].[Variance]} ON COLUMNS, NON EMPTY CrossJoin(Hierarchize(Union({[Region].[All Regions]}, [Region].[All Regions].Children)), {([Department].[All Departments], [Positions].[All Positions])}) ON ROWS FROM [Quadrant Analysis]',NULL,FALSE,FALSE,FALSE,FALSE,49,FALSE,FALSE)
INSERT INTO REPORT VALUES(64,'Quadrant Analysis By Department','OLAP Example with Parameter','datasources.xml',FALSE,FALSE,FALSE,FALSE,NULL,'SELECT NON EMPTY {[Measures].[Actual], [Measures].[Budget], [Measures].[Variance]} ON COLUMNS, NON EMPTY CrossJoin({[Region].[All Regions], [Region].[All Regions].[Central], [Region].[All Regions].[Eastern], [Region].[All Regions].[Southern], [Region].[All Regions].[Western]}, {[Positions].[All Positions]}) ON ROWS FROM [Quadrant Analysis] WHERE ([Department].[All Departments].[$P{Department}])',NULL,FALSE,FALSE,FALSE,FALSE,50,FALSE,FALSE)
INSERT INTO REPORT VALUES(65,'Customer Email Sample','Velocity Example with Query and Parameter','CustomerEmailTemplate.vm',FALSE,FALSE,FALSE,FALSE,NULL,'select customernumber, customername as "Name", addressline1 as "Address", city, state, postalcode, country from customers\u000d\u000awhere customernumber = $P{CustomerNumber}\u000d\u000aorder by customername',2,FALSE,FALSE,TRUE,FALSE,51,FALSE,FALSE)
INSERT INTO REPORT VALUES(66,'Email Sample','Basic Velocity Example','SampleEmailTemplate.vm',FALSE,FALSE,FALSE,TRUE,NULL,'',NULL,FALSE,FALSE,TRUE,FALSE,52,FALSE,FALSE)
INSERT INTO USER_GROUP_MAP VALUES(0,0,0)
INSERT INTO USER_GROUP_MAP VALUES(0,7,1)
INSERT INTO USER_GROUP_MAP VALUES(0,1,2)
INSERT INTO USER_GROUP_MAP VALUES(0,5,3)
INSERT INTO USER_GROUP_MAP VALUES(0,2,4)
INSERT INTO USER_GROUP_MAP VALUES(0,6,5)
INSERT INTO USER_GROUP_MAP VALUES(0,8,6)
INSERT INTO USER_GROUP_MAP VALUES(0,9,7)
INSERT INTO USER_GROUP_MAP VALUES(5,1,0)
INSERT INTO USER_GROUP_MAP VALUES(5,5,1)
INSERT INTO USER_GROUP_MAP VALUES(5,2,2)
INSERT INTO USER_GROUP_MAP VALUES(5,8,3)
INSERT INTO USER_GROUP_MAP VALUES(5,9,4)
INSERT INTO REPORT_GROUP VALUES(0,'All Sample Reports','All Sample Reports')
INSERT INTO REPORT_GROUP VALUES(1,'ChartReports','Example ChartReports')
INSERT INTO REPORT_GROUP VALUES(2,'QueryReports','Example QueryReports')
INSERT INTO REPORT_GROUP VALUES(5,'JasperReports','Example JasperReports')
INSERT INTO REPORT_GROUP VALUES(6,'SpreadsheetReports','Example JXLS Spreadsheet Reports ')
INSERT INTO REPORT_GROUP VALUES(7,'BirtReports','Example BIRT Reports')
INSERT INTO REPORT_GROUP VALUES(8,'OLAP','Example OLAP Reports')
INSERT INTO REPORT_GROUP VALUES(9,'VelocityReports','Example Velocity Reports')
INSERT INTO REPORT_PARAMETER_MAP VALUES(38,9,FALSE,0,0,0)
INSERT INTO REPORT_PARAMETER_MAP VALUES(38,20,TRUE,0,0,1)
INSERT INTO REPORT_PARAMETER_MAP VALUES(40,21,FALSE,0,0,0)
INSERT INTO REPORT_PARAMETER_MAP VALUES(41,21,TRUE,0,0,0)
INSERT INTO REPORT_PARAMETER_MAP VALUES(49,22,TRUE,0,0,0)
INSERT INTO REPORT_PARAMETER_MAP VALUES(49,23,TRUE,0,1,1)
INSERT INTO REPORT_PARAMETER_MAP VALUES(49,19,FALSE,1,1,2)
INSERT INTO REPORT_PARAMETER_MAP VALUES(49,11,FALSE,2,1,3)
INSERT INTO REPORT_PARAMETER_MAP VALUES(50,24,TRUE,0,0,0)
INSERT INTO REPORT_PARAMETER_MAP VALUES(60,26,TRUE,0,0,0)
INSERT INTO REPORT_PARAMETER_MAP VALUES(64,27,TRUE,0,0,0)
INSERT INTO REPORT_PARAMETER_MAP VALUES(65,21,TRUE,0,0,0)
INSERT INTO REPORT_GROUP_MAP VALUES(0,61,0)
INSERT INTO REPORT_GROUP_MAP VALUES(0,60,1)
INSERT INTO REPORT_GROUP_MAP VALUES(0,59,2)
INSERT INTO REPORT_GROUP_MAP VALUES(0,58,3)
INSERT INTO REPORT_GROUP_MAP VALUES(0,56,4)
INSERT INTO REPORT_GROUP_MAP VALUES(0,50,5)
INSERT INTO REPORT_GROUP_MAP VALUES(0,39,6)
INSERT INTO REPORT_GROUP_MAP VALUES(0,57,7)
INSERT INTO REPORT_GROUP_MAP VALUES(0,48,8)
INSERT INTO REPORT_GROUP_MAP VALUES(0,53,9)
INSERT INTO REPORT_GROUP_MAP VALUES(0,37,10)
INSERT INTO REPORT_GROUP_MAP VALUES(0,55,11)
INSERT INTO REPORT_GROUP_MAP VALUES(0,40,12)
INSERT INTO REPORT_GROUP_MAP VALUES(0,14,13)
INSERT INTO REPORT_GROUP_MAP VALUES(0,41,14)
INSERT INTO REPORT_GROUP_MAP VALUES(0,13,15)
INSERT INTO REPORT_GROUP_MAP VALUES(0,38,16)
INSERT INTO REPORT_GROUP_MAP VALUES(0,46,17)
INSERT INTO REPORT_GROUP_MAP VALUES(0,47,18)
INSERT INTO REPORT_GROUP_MAP VALUES(0,54,19)
INSERT INTO REPORT_GROUP_MAP VALUES(0,49,20)
INSERT INTO REPORT_GROUP_MAP VALUES(0,42,21)
INSERT INTO REPORT_GROUP_MAP VALUES(0,33,22)
INSERT INTO REPORT_GROUP_MAP VALUES(0,63,23)
INSERT INTO REPORT_GROUP_MAP VALUES(0,64,24)
INSERT INTO REPORT_GROUP_MAP VALUES(0,65,25)
INSERT INTO REPORT_GROUP_MAP VALUES(0,66,26)
INSERT INTO REPORT_GROUP_MAP VALUES(1,14,0)
INSERT INTO REPORT_GROUP_MAP VALUES(1,41,1)
INSERT INTO REPORT_GROUP_MAP VALUES(1,13,2)
INSERT INTO REPORT_GROUP_MAP VALUES(1,46,3)
INSERT INTO REPORT_GROUP_MAP VALUES(1,47,4)
INSERT INTO REPORT_GROUP_MAP VALUES(1,42,5)
INSERT INTO REPORT_GROUP_MAP VALUES(2,39,0)
INSERT INTO REPORT_GROUP_MAP VALUES(2,37,1)
INSERT INTO REPORT_GROUP_MAP VALUES(2,40,2)
INSERT INTO REPORT_GROUP_MAP VALUES(2,38,3)
INSERT INTO REPORT_GROUP_MAP VALUES(2,33,4)
INSERT INTO REPORT_GROUP_MAP VALUES(5,50,0)
INSERT INTO REPORT_GROUP_MAP VALUES(5,48,1)
INSERT INTO REPORT_GROUP_MAP VALUES(5,56,2)
INSERT INTO REPORT_GROUP_MAP VALUES(5,49,3)
INSERT INTO REPORT_GROUP_MAP VALUES(5,57,4)
INSERT INTO REPORT_GROUP_MAP VALUES(6,53,0)
INSERT INTO REPORT_GROUP_MAP VALUES(6,54,1)
INSERT INTO REPORT_GROUP_MAP VALUES(6,55,2)
INSERT INTO REPORT_GROUP_MAP VALUES(7,61,0)
INSERT INTO REPORT_GROUP_MAP VALUES(7,60,1)
INSERT INTO REPORT_GROUP_MAP VALUES(7,59,2)
INSERT INTO REPORT_GROUP_MAP VALUES(7,58,3)
INSERT INTO REPORT_GROUP_MAP VALUES(8,63,0)
INSERT INTO REPORT_GROUP_MAP VALUES(8,64,1)
INSERT INTO REPORT_GROUP_MAP VALUES(9,65,0)
INSERT INTO REPORT_GROUP_MAP VALUES(9,66,1)
INSERT INTO REPORT_CHART VALUES(4,'Orders By Year and Month','XY Chart - Orders By Year and Month','select year_id, month_id,sum(quantityordered)\u000d\u000a from orderfact, time\u000d\u000awhere orderfact.time_id = time.time_id\u000d\u000aand orderfact.orderdate > ''2002-12-31''\u000d\u000aand orderfact.orderdate < ''2005-01-01''\u000d\u000agroup by year_id, month_id',2,600,400,'Month','Quantity Ordered',2,TRUE,TRUE,2,NULL,FALSE,NULL)
INSERT INTO REPORT_CHART VALUES(5,'Orders By Date','Time Chart - Orders By Date','select ''Orders'', sum(QUANTITYORDERED),orderdate \u000d\u000a from orderfact\u000d\u000awhere orderfact.orderdate > ''2003-11-03'' \u000d\u000aand orderfact.orderdate < ''2003-11-11''\u000d\u000agroup by orderdate\u000d\u000a\u000d\u000a',3,600,400,'Order Date','Order Quantity',2,FALSE,FALSE,2,NULL,FALSE,NULL)
INSERT INTO REPORT_CHART VALUES(9,'Orders By Product Line','Pie Chart - Orders By Product Line','select count(*), productline from orderdetails, orders, products where \u000d\u000aorders.ordernumber = orderdetails.ordernumber\u000d\u000aand \u000d\u000aorderdetails.productcode = products.productcode and orders.customernumber = $P{CustomerNumber}\u000d\u000agroup by productline',1,600,400,'','',2,TRUE,TRUE,1,NULL,FALSE,NULL)
INSERT INTO REPORT_CHART VALUES(10,'Product Break Down By Line','Bar Chart - Product Break Down By Line','select count(*), '''', productline\u000d\u000afrom products \u000d\u000agroup by productline\u000d\u000aorder by productline',0,600,400,'Product Name','Product Count',2,FALSE,FALSE,1,46,TRUE,NULL)
INSERT INTO REPORT_CHART VALUES(11,'Product Line Inventory','Ring Chart - Product Line Inventory','select sum(quantityinstock), productline \u000d\u000afrom products \u000d\u000agroup by productline\u000d\u000aorder by productline',4,600,400,'','',2,FALSE,TRUE,1,NULL,TRUE,NULL)
INSERT INTO REPORT_USER VALUES(0,'admin','admin','1','admin@testdomain.com',0,42)
INSERT INTO REPORT_USER VALUES(5,'user','user','3','user@testdomain.com',0,NULL)
INSERT INTO OR_PROPERTIES VALUES(0,'base.directory','c:\openreports-tomcat\reports\')
INSERT INTO OR_PROPERTIES VALUES(1,'date.format','MM/dd/yyyy')
INSERT INTO OR_PROPERTIES VALUES(2,'mail.auth.password','')
INSERT INTO OR_PROPERTIES VALUES(3,'mail.auth.user','')
INSERT INTO OR_PROPERTIES VALUES(4,'mail.smtp.auth','false')
INSERT INTO OR_PROPERTIES VALUES(5,'mail.smtp.host','localhost')
INSERT INTO OR_PROPERTIES VALUES(6,'role.admin','admin')
INSERT INTO OR_PROPERTIES VALUES(7,'role.user','user')
INSERT INTO OR_PROPERTIES VALUES(8,'temp.directory','c:\openreports-tomcat\temp\')
INSERT INTO OR_PROPERTIES VALUES(9,'queryreport.maxrows','1000')
INSERT INTO OR_PROPERTIES VALUES(10,'report.generation.directory','c:\openreports-tomcat\reports\generated\')
INSERT INTO OR_PROPERTIES VALUES(11,'xmla.catalog','SampleData')
INSERT INTO OR_PROPERTIES VALUES(12,'xmla.datasource','Provider=Mondrian;DataSource=SampleData')
INSERT INTO OR_PROPERTIES VALUES(13,'xmla.uri','http://localhost:8080/openreports/xmla')
INSERT INTO REPORT_ALERT VALUES(2,'Budget Variance Alert','Budget Variance Alert','select sum(variance) from quadrant_actuals',2)
INSERT INTO REPORT_ALERT VALUES(3,'Motorcycle Inventory Alert','Motorcycle Inventory Alert','select sum(quantityinstock)\u000d\u000afrom products \u000d\u000awhere productline = ''Motorcycles''',2)
INSERT INTO USER_ALERT_MAP VALUES(0,2,-250000,'<',0,33)
INSERT INTO USER_ALERT_MAP VALUES(0,3,75000,'>',1,47)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(16,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(17,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(19,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(23,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(24,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(25,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(26,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(27,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(28,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(32,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(33,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(34,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(35,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(36,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(39,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(40,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(41,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(42,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(43,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(44,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(45,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(46,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(47,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(49,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(50,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(51,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO REPORT_EXPORT_OPTIONS VALUES(52,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
INSERT INTO QRTZ_LOCKS VALUES('CALENDAR_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('JOB_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('MISFIRE_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('STATE_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('TRIGGER_ACCESS')
INSERT INTO USER_SECURITY VALUES(5,'LOG_VIEWER_ROLE')
INSERT INTO USER_SECURITY VALUES(0,'CHART_ADMIN_ROLE')
INSERT INTO USER_SECURITY VALUES(0,'REPORT_ADMIN_ROLE')
INSERT INTO USER_SECURITY VALUES(0,'GROUP_ADMIN_ROLE')
INSERT INTO USER_SECURITY VALUES(0,'LOG_VIEWER_ROLE')
INSERT INTO USER_SECURITY VALUES(0,'PARAMETER_ADMIN_ROLE')
INSERT INTO USER_SECURITY VALUES(0,'DATASOURCE_ADMIN_ROLE')
INSERT INTO USER_SECURITY VALUES(0,'SCHEDULER_ROLE')
INSERT INTO USER_SECURITY VALUES(0,'UPLOAD_ROLE')
INSERT INTO USER_SECURITY VALUES(0,'ROOT_ADMIN_ROLE')
INSERT INTO USER_SECURITY VALUES(5,'SCHEDULER_ROLE')
INSERT INTO USER_SECURITY VALUES(5,'REPORT_ADMIN_ROLE')
INSERT INTO USER_SECURITY VALUES(5,'UPLOAD_ROLE')
INSERT INTO USER_SECURITY VALUES(0,'ADVANCED_SCHEDULER_ROLE')
INSERT INTO REPORT_DELIVERY_LOG VALUES(19,'2007-11-26 14:54:08.546','2007-11-26 14:54:09.39','success',NULL,'email',3826,0)
